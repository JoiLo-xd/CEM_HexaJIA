/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package cem.view.dialogsMenu2;

import cem.controller.Controller;
import cem.model.Marxa;
import cem.model.TO.ParticipantEditionTO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class ShowMarxes1 extends javax.swing.JDialog {

    private Controller controller;

    /**
     * Creates new form ShowMarxes1
     */
    public ShowMarxes1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setTitle("Mostrar marxes");
        setModal(true);
        pack();
        setResizable(false);
        initComponents();
        setLocationRelativeTo(null);
        controller = Controller.getInstance();
        listMarxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundButtonjPanel1 = new javax.swing.JPanel();
        canceljButton = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        backgroundButtonjPanel1.setBackground(new java.awt.Color(0, 153, 204));

        canceljButton.setText("cancelar");
        canceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceljButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundButtonjPanel1Layout = new javax.swing.GroupLayout(backgroundButtonjPanel1);
        backgroundButtonjPanel1.setLayout(backgroundButtonjPanel1Layout);
        backgroundButtonjPanel1Layout.setHorizontalGroup(
            backgroundButtonjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundButtonjPanel1Layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(canceljButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        backgroundButtonjPanel1Layout.setVerticalGroup(
            backgroundButtonjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundButtonjPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canceljButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Edició", "Participants"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(jTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundButtonjPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundButtonjPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void canceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceljButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_canceljButtonActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable)evt.getSource();
            int row = source.rowAtPoint( evt.getPoint() );
            int column = source.columnAtPoint( evt.getPoint() );
            String s=source.getModel().getValueAt(row, column)+"";

            JOptionPane.showMessageDialog(null, s);
    }//GEN-LAST:event_jTableMouseClicked

    //TODO false ahcer el metodo para meter los valores en la tabla
    /**
     * @param args the command line arguments
     */
    private void listMarxes() {
        try {
            ArrayList<ParticipantEditionTO> marxes = controller.getMarxes();
            DefaultTableModel dtm = new DefaultTableModel(new String[]{"Edició", "Participants"}, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // ninguna celda editable
                }
            };
            for (ParticipantEditionTO p : marxes) {
                dtm.addRow(new Integer[]{p.getEdicio(), p.getNumParticipants()});
            }
            jTable.setModel(dtm);
        } catch (SQLException ex) {
            System.out.println("ERROR SQL (no debería darse): " + ex.getMessage());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundButtonjPanel1;
    private javax.swing.JButton canceljButton;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
